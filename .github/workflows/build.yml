name: Build macOS App

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  release:
    types: [created]

jobs:
  build:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Cache Swift Package Manager
      uses: actions/cache@v3
      with:
        path: .build
        key: ${{ runner.os }}-spm-${{ hashFiles('Package.swift') }}
        restore-keys: |
          ${{ runner.os }}-spm-
    
    - name: Resolve Swift Package Dependencies
      run: swift package resolve
    
    - name: Build for Apple Silicon
      run: swift build --configuration release --arch arm64
    
    - name: Build for Intel
      run: swift build --configuration release --arch x86_64
    
    - name: Create Universal Binary
      run: |
        mkdir -p .build/universal
        lipo -create \
          .build/arm64-apple-macosx/release/AIMusic \
          .build/x86_64-apple-macosx/release/AIMusic \
          -output .build/universal/AIMusic
    
    - name: Create App Bundle
      run: |
        mkdir -p AIMusic.app/Contents/MacOS
        mkdir -p AIMusic.app/Contents/Resources
        cp .build/universal/AIMusic AIMusic.app/Contents/MacOS/
        cp Info.plist AIMusic.app/Contents/
        chmod +x AIMusic.app/Contents/MacOS/AIMusic
    
    - name: Create DMG
      run: |
        ./create_dmg.sh
    
    - name: Upload App Bundle
      uses: actions/upload-artifact@v3
      with:
        name: AIMusic-macOS-App
        path: AIMusic.app/
    
    - name: Upload DMG
      uses: actions/upload-artifact@v3
      with:
        name: AIMusic-macOS-DMG
        path: "*.dmg"
    
    - name: Release
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v1
      with:
        files: "*.dmg"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}